name: Build -> Test -> Release

on:
  push:
    branches:
      - main
      - next
      - alpha
      - beta
      - '*.x*'

env:
  HUSKY: 0
  GIT_AUTHOR_NAME: kirangadhave
  GIT_AUTHOR_EMAIL: kirangadhave2@gmail.com
  GIT_COMMITTER_NAME: kirangadhave
  GIT_COMMITTER_EMAIL: kirangadhave2@gmail.com

jobs:
  release:
    name: Build -> Test -> Release
    runs-on: ubuntu-latest

    steps:
      - name: Get Token
        id: get_workflow_token
        uses: peter-murray/workflow-application-token-action@v1
        with:
          application_id: ${{ secrets.APPLICATION_ID }}
          application_private_key: ${{ secrets.APPLICATION_PRIVATE_KEY }}

      - name: Checkout
        uses: actions/checkout@v3
        env:
          GITHUB_TOKEN: ${{ steps.get_workflow_token.outputs.token }}
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Track main
        run: git branch --track main origin/main || echo "Already done"

      - name: 'Derive appropriate SHAs for base and head for `nx affected` commands'
        uses: nrwl/nx-set-shas@v3

      - run: |
          echo "BASE: ${{ env.NX_BASE }}"
          echo "HEAD: ${{ env.NX_HEAD }}"

      - name: Setup LTS Node
        uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'npm'

      - name: Cache node modules
        uses: actions/cache@v3
        id: npm-cache
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm install

      - name: Build
        run: |
          RUN=CI npm run build-affected-libs

      - name: Test
        run: |
          RUN=CI npm run test-affected-libs

      - name: Release SignallingJS
        if: ${{ success() && (github.event_name != 'pull_request' || github.event.action == 'closed' && github.event.pull_request.merged == true) }}
        env:
          GITHUB_TOKEN: ${{ steps.get_workflow_token.outputs.token }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          RUN=CI npx nx run signallingjs:release
